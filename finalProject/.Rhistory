}
}
}
print(paste(snp,HWE_Pval )
sdfds
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ((-log10(HWE_Pval) < 4.5) $$ (-log10(HWE_Pval) > 3.5)){
print(paste(snp,HWE_Pval )
}
}
}
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ((-log10(HWE_Pval) < 4.5) $$ (-log10(HWE_Pval) > 3.5)){
print(paste(snp,HWE_Pval )
}
}
}
print(paste(snp,HWE_Pval)
sdf
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ((-log10(HWE_Pval) < 4.5) $$ (-log10(HWE_Pval) > 3.5)){
print(paste(snp,HWE_Pval)
}
}
}
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ((-log10(HWE_Pval) < 4.5) $$ (-log10(HWE_Pval) > 3.5)){
print(paste(snp,HWE_Pval))
}
}
}
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ((-log10(HWE_Pval) < 4.5) $$ (-log10(HWE_Pval) > 3.5)){
print(paste(snp,HWE_Pval))
}
}
}
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ((-log10(HWE_Pval) < 4.5) $$ (-log10(HWE_Pval) > 3.5)){
#print(paste(snp,HWE_Pval))
}
}
}
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
#     if ((-log10(HWE_Pval) < 4.5) $$ (-log10(HWE_Pval) > 3.5)){
#       #print(paste(snp,HWE_Pval))
#     }
}
}
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ( (-log10(HWE_Pval) < 4.5) && (-log10(HWE_Pval) > 3.5)){
print(paste(snp,HWE_Pval))
}
}
}
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ( (-log10(HWE_Pval) < 4.5) && (-log10(HWE_Pval) > 3.8)){
print(paste(snp,HWE_Pval))
}
}
}
#----------------------------------------------------------------------------------------------------
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ( (-log10(HWE_Pval) < 4.5) && (-log10(HWE_Pval) > 3.8)){
print(paste(snp,HWE_Pval))
print(summary(currentSnp))
}
}
}
ggplot(data=results, aes(x=Used_Snps, y=X.log10.HWE_Pvals.)) +
geom_bar(aes(fill=X.log10.HWE_Pvals.>3),stat="identity") +
ggtitle("Hardy Weinberg Equilibrium $\chi^2$ for SNPs")
ggplot(data=results, aes(x=Used_Snps, y=X.log10.HWE_Pvals.)) +
geom_bar(aes(fill=X.log10.HWE_Pvals.>3),stat="identity") +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs")
ggplot(data=results, aes(x=Used_Snps, y=X.log10.HWE_Pvals.)) +
geom_bar(aes(fill=X.log10.HWE_Pvals.>3),stat="identity") +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)")
ggplot(data=results, aes(x=Used_Snps, y=X.log10.HWE_Pvals.)) +
geom_bar(aes(fill=X.log10.HWE_Pvals.>3),stat="identity") +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)") + xlab("SNP")
ggplot(data=results, aes(x=Used_Snps, y=X.log10.HWE_Pvals.)) +
geom_bar(aes(fill=X.log10.HWE_Pvals.>3),stat="identity",axis.text.x=theme_blank()) +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)") + xlab("SNP")
ggplot(data=results, aes(x=Used_Snps, y=X.log10.HWE_Pvals.)) +
geom_bar(aes(fill=X.log10.HWE_Pvals.>3),stat="identity") +
theme(axis.text.x = element_blank()) +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)") + xlab("SNP")
View(fms2)
View(fms)
View(fms)
View(fms)
library(vioplot)
library(haplo.stats)
library(ggplot2)
source("http://www.uvm.edu/~rsingle/Rdata/scripts_stat295F14.R")
fms <- otherdata("FMS_data.tsv", sep="\t")
attach(fms)
#--------------------------------------------------------------------------------------
#We assign out cutoff at the 90th percentile
cutoff = quantile(NDRM.CH, c(.95), na.rm = TRUE)
#testing with a random snp first.
chisq.test(table(NDRM.CH > cutoff, actn3_1671064))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
percents_NA = NULL
for (snp in snps){
percents_NA = c(percents_NA, ( summary(fms[[snp]])["NA's"] / length(fms[[snp]])) )
}
#hist(percent_NA, breaks = 20)
vioplot(percents_NA)
#So we will throw away snps with NA percentange of higher than 70.
#Initialize some lists
pvals = NULL
pval = NULL
numOfSnps = 0
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(NDRM.CH > 100, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
pvals = c(pvals, pval)
numOfSnps = numOfSnps + 1
if (-log10(pval) > 2){
print(snp)
}
} else {
}
}
bonferPVal = .05/numOfSnps
bonferPVal
barplot(-log10(pvals))
genotyped = NULL
HWE_Pvals = NULL
Used_Snps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped = genotype(currentSnp, sep = "")
HWE_Pval = HWE.chisq(genotyped)$p.value
HWE_Pvals = c(HWE_Pvals, HWE_Pval)
Used_Snps = c(Used_Snps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ( (-log10(HWE_Pval) < 4.5) && (-log10(HWE_Pval) > 3.8)){
print(paste(snp,HWE_Pval))
print(summary(currentSnp))
}
}
}
results = data.frame(Used_Snps, -log10(HWE_Pvals), Color)
#Let's plot with ggplot because we can, and it's pretty.
ggplot(data=results, aes(x=Used_Snps, y=X.log10.HWE_Pvals.)) +
geom_bar(aes(fill=X.log10.HWE_Pvals.>3),stat="identity") +
theme(axis.text.x = element_blank()) +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)") + xlab("SNP")
vioplot(percents_NA)
NDRM_pvals = NULL
pval = NULL
numOfSnps = 0
usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(NDRM.CH > 100, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
NDRM_pvals = c(NDRM_pvals, pval)
usedSnps = c(usedSnps, snp)
numOfSnps = numOfSnps + 1
if (-log10(pval) > 2){
print(snp)
}
} else {
}
}
barplot(-log10(NDRM_pvals))
usedSnps
NDRM_pvals = NULL
NDRM_usedSnps = NULL
pval = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(NDRM.CH > 100, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
NDRM_pvals = c(NDRM_pvals, pval)
NDRM_usedSnps = c(usedSnps, snp)
if (-log10(pval) > 2){
print(snp)
}
} else {
}
}
bonferPVal = .05/length(NDRM_pvals)
bonferPVal
barplot(-log10(NDRM_pvals))
NDRM_Out = data.frame(NDRM_usedSnps, NDRM_pvals)
NDRM_pvals    = NULL
NDRM_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(NDRM.CH > 100, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
NDRM_pvals = c(NDRM_pvals, pval)
NDRM_usedSnps = c(usedSnps, snp)
}
}
NDRM_Out = data.frame(NDRM_usedSnps, NDRM_pvals)
#Initialize some lists
NDRM_pvals    = NULL
NDRM_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(NDRM.CH > 100, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
NDRM_pvals = c(NDRM_pvals, pval)
NDRM_usedSnps = c(NDRM_usedSnps, snp)
}
}
NDRM_Out = data.frame(NDRM_usedSnps, NDRM_pvals)
setwd("/Users/Nick/fall14/statGen/finalProject")
write.csv(NDRM_Out, file = "NDRM_Data.csv")
NDRM_Out = data.frame(NDRM_usedSnps, -log10(NDRM_pvals))
write.csv(NDRM_Out, file = "NDRM_Data.csv")
NDRM_Out = data.frame(NDRM_usedSnps, -log10(NDRM_pvals))
write.csv(NDRM_Out, file = "NDRM_Data.csv")
HWE_Pvals = NULL
HWE_usedSnps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped    = genotype(currentSnp, sep = "")
HWE_Pval     = HWE.chisq(genotyped)$p.value
HWE_Pvals    = c(HWE_Pvals, HWE_Pval)
HWE_usedSnps = c(HWE_usedSnps, snp)
if (-log10(HWE_Pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
if ( (-log10(HWE_Pval) < 4.5) && (-log10(HWE_Pval) > 3.8)){
print(paste(snp,HWE_Pval))
print(summary(currentSnp))
}
}
}
results = data.frame(HWE_usedSnps, -log10(HWE_Pvals), Color)
#Let's plot with ggplot because we can, and it's pretty.
ggplot(data=results, aes(x=HWE_usedSnps, y=X.log10.HWE_Pvals.)) +
geom_bar(aes(fill=X.log10.HWE_Pvals.>3),stat="identity") +
theme(axis.text.x = element_blank()) +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)") + xlab("SNP")
HWE_Out = data.frame(HWE_usedSnps, -log10(HWE_pvals))
write.csv(HWE_Out, file = "HWE_Data.csv")
HWE_Out = data.frame(HWE_usedSnps, -log10(HWE_pvals))
HWE_pvals = NULL
HWE_usedSnps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped    = genotype(currentSnp, sep = "")
HWE_pval     = HWE.chisq(genotyped)$p.value
HWE_pvals    = c(HWE_pvals, HWE_pval)
HWE_usedSnps = c(HWE_usedSnps, snp)
if (-log10(HWE_pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
#     if ( (-log10(HWE_pval) < 4.5) && (-log10(HWE_pval) > 3.8)){
#       print(paste(snp,HWE_pval))
#       print(summary(currentSnp))
#     }
}
}
ggplot(data=results, aes(x=HWE_usedSnps, y=X.log10.HWE_pvals.)) +
geom_bar(aes(fill=X.log10.HWE_pvals.>3),stat="identity") +
theme(axis.text.x = element_blank()) +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)") + xlab("SNP")
results = data.frame(HWE_usedSnps, -log10(HWE_pvals), Color)
ggplot(data=results, aes(x=HWE_usedSnps, y=X.log10.HWE_pvals.)) +
geom_bar(aes(fill=X.log10.HWE_pvals.>3),stat="identity") +
theme(axis.text.x = element_blank()) +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)") + xlab("SNP")
#make a csv for exporting
HWE_Out = data.frame(HWE_usedSnps, -log10(HWE_pvals))
write.csv(HWE_Out, file = "HWE_Data.csv")
HWE_Out = data.frame(NDRM_Out,HWE_usedSnps, -log10(HWE_pvals))
Merged_Out = merge(HWE_Out, NDRM_Out, all = TRUE)
View(Merged_Out)
#We assign out cutoff at the 90th percentile
cutoff = quantile(NDRM.CH, c(.95), na.rm = TRUE)
#testing with a random snp first.
chisq.test(table(NDRM.CH > cutoff, actn3_1671064))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
percents_NA = NULL
for (snp in snps){
percents_NA = c(percents_NA, ( summary(fms[[snp]])["NA's"] / length(fms[[snp]])) )
}
#hist(percent_NA, breaks = 20)
vioplot(percents_NA)
#So we will throw away snps with NA percentange of higher than 70.
#Initialize some lists
NDRM_pvals    = NULL
NDRM_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(NDRM.CH > 100, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
NDRM_pvals = c(NDRM_pvals, pval)
NDRM_usedSnps = c(NDRM_usedSnps, snp)
}
}
bonferPVal = .05/length(NDRM_pvals)
bonferPVal
barplot(-log10(NDRM_pvals))
Merged_Out = data.frame.na(HWE_usedSnps, HWE_pvals, NDRM_usedSnps, NDRM_pvals)
Merged_Out = cbind.na(HWE_usedSnps, HWE_pvals, NDRM_usedSnps, NDRM_pvals)
Merged_Out = cbind(HWE_usedSnps, HWE_pvals, NDRM_usedSnps, NDRM_pvals)
Merged_Out
Merged_Out = merge(HWE_usedSnps, HWE_pvals, NDRM_usedSnps, NDRM_pvals)
Merged_Out = data.frame(HWE_usedSnps, HWE_pvals, NDRM_usedSnps, NDRM_pvals)
Merged_Out = cbind(HWE_usedSnps, HWE_pvals, NDRM_usedSnps, NDRM_pvals)
Merged_Out
View(Merged_Out)
length(NDRM_Out)
size(NDRM_Out)
summary(NDRM_Out)
shape(NDRM_Out)
nrow(NDRM_Out)
nrow(HWE_Out)
library(plyr)
testing = rbind.fill(HWE_Out, NDRM_Out)
View(testing)
#Let's plot with ggplot because we can, and it's pretty.
ggplot(data=results, aes(x=HWE_usedSnps, y=X.log10.HWE_pvals.)) +
geom_bar(aes(fill=X.log10.HWE_pvals.>3),stat="identity") +
theme(axis.text.x = element_blank()) +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)") + xlab("SNP")
