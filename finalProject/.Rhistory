Rec_model <- glm(cc==2 ~ snp, family=binomial)
#model5
exp(Rec_model$coeff)
contrasts(snp,1) <- cbind(Dom)
contrasts(snp)
Dom_model <- glm(cc==2 ~ snp, family=binomial)
#model4
Dom_OR = exp(Dom_model$coeff)
#Recessive model
contrasts(snp,1) <- cbind(Rec)
contrasts(snp)
Rec_model <- glm(cc==2 ~ snp, family=binomial)
#model5
Rec_OR = exp(Rec_model$coeff)
#95% CI for dominant OR
Dom_m.sum <- summary(Dom_model)
ci.l <- exp( Dom_m.sum$coeff[,1] - 1.96*(Dom_m.sum$coeff[,2]) )
ci.u <- exp( Dom_m.sum$coeff[,1] + 1.96*(Dom_m.sum$coeff[,2]) )
rbind(ci.l, ci.u)
#95% CI for recessive OR
Rec_m.sum <- summary(Rec_model)
ci.l <- exp( Rec_m.sum$coeff[,1] - 1.96*(Rec_m.sum$coeff[,2]) )
ci.u <- exp( Rec_m.sum$coeff[,1] + 1.96*(Rec_m.sum$coeff[,2]) )
rbind(ci.l, ci.u)
snp = s7062
#snp = s7694
Dom <- c(1, 1, 0) #With A as the 'variant' allele
Rec <- c(1, 0, 0) #With A as the 'variant' allele
#Dominant model
contrasts(snp,1) <- cbind(Dom)
contrasts(snp)
Dom_model <- glm(cc==2 ~ snp, family=binomial)
#model4
Dom_OR = exp(Dom_model$coeff)
#Recessive model
contrasts(snp,1) <- cbind(Rec)
contrasts(snp)
Rec_model <- glm(cc==2 ~ snp, family=binomial)
#model5
Rec_OR = exp(Rec_model$coeff)
#95% CI for dominant OR
Dom_m.sum <- summary(Dom_model)
ci.l <- exp( Dom_m.sum$coeff[,1] - 1.96*(Dom_m.sum$coeff[,2]) )
ci.u <- exp( Dom_m.sum$coeff[,1] + 1.96*(Dom_m.sum$coeff[,2]) )
Dom_CI = rbind(ci.l, ci.u)
#95% CI for recessive OR
Rec_m.sum <- summary(Rec_model)
ci.l <- exp( Rec_m.sum$coeff[,1] - 1.96*(Rec_m.sum$coeff[,2]) )
ci.u <- exp( Rec_m.sum$coeff[,1] + 1.96*(Rec_m.sum$coeff[,2]) )
Rec_CI = rbind(ci.l, ci.u)
Rec_CI
Rec_CI[2,1]
Rec_CI[1,2]
DomResults = paste("Dominant: OR:", toString(Dom_OR), " Confidence Interval: (", toString(Dom_CI[1,2]), toString(Dom_CI[2,2]), ")")
DomResults
DomResults = paste("Dominant: OR:", toString(Dom_OR[2]), " Confidence Interval: (", toString(Dom_CI[1,2]), toString(Dom_CI[2,2]), ")")
DomResults
RecResults = paste("Recesive: OR:", toString(Rec_OR[2]), " Confidence Interval: (", toString(Rec_CI[1,2]), toString(Rec_CI[2,2]), ")")
DomResults = paste("Dominant: OR:", toString(Dom_OR[2]), " Confidence Interval: (", toString(Dom_CI[1,2]), toString(Dom_CI[2,2]), ")")
RecResults = paste("Recesive: OR:", toString(Rec_OR[2]), " Confidence Interval: (", toString(Rec_CI[1,2]), toString(Rec_CI[2,2]), ")")
print(DomResults)
print(RecResults)
#snp = s7062
snp = s7694
Dom <- c(1, 1, 0) #With A as the 'variant' allele
Rec <- c(1, 0, 0) #With A as the 'variant' allele
#Dominant model
contrasts(snp,1) <- cbind(Dom)
contrasts(snp)
Dom_model <- glm(cc==2 ~ snp, family=binomial)
#model4
Dom_OR = exp(Dom_model$coeff)
#Recessive model
contrasts(snp,1) <- cbind(Rec)
contrasts(snp)
Rec_model <- glm(cc==2 ~ snp, family=binomial)
#model5
Rec_OR = exp(Rec_model$coeff)
#95% CI for dominant OR
Dom_m.sum <- summary(Dom_model)
ci.l <- exp( Dom_m.sum$coeff[,1] - 1.96*(Dom_m.sum$coeff[,2]) )
ci.u <- exp( Dom_m.sum$coeff[,1] + 1.96*(Dom_m.sum$coeff[,2]) )
Dom_CI = rbind(ci.l, ci.u)
#95% CI for recessive OR
Rec_m.sum <- summary(Rec_model)
ci.l <- exp( Rec_m.sum$coeff[,1] - 1.96*(Rec_m.sum$coeff[,2]) )
ci.u <- exp( Rec_m.sum$coeff[,1] + 1.96*(Rec_m.sum$coeff[,2]) )
Rec_CI = rbind(ci.l, ci.u)
DomResults = paste("Dominant: OR:", toString(Dom_OR[2]), " Confidence Interval: (", toString(Dom_CI[1,2]), toString(Dom_CI[2,2]), ")")
RecResults = paste("Recesive: OR:", toString(Rec_OR[2]), " Confidence Interval: (", toString(Rec_CI[1,2]), toString(Rec_CI[2,2]), ")")
print(DomResults)
print(RecResults)
snp = s7694[s7694 != "00"]
snp
CC_Log = cc==2
CC_Log
snp = s7062
CC_Log = cc==2
#snp = s7694[s7694 != "00"]
Dom <- c(1, 1, 0) #With A as the 'variant' allele
Rec <- c(1, 0, 0) #With A as the 'variant' allele
#Dominant model
contrasts(snp,1) <- cbind(Dom)
contrasts(snp)
Dom_model <- glm(CC_Log ~ snp, family=binomial)
#model4
Dom_OR = exp(Dom_model$coeff)
#Recessive model
contrasts(snp,1) <- cbind(Rec)
contrasts(snp)
Rec_model <- glm(CC_Log ~ snp, family=binomial)
#model5
Rec_OR = exp(Rec_model$coeff)
#95% CI for dominant OR
Dom_m.sum <- summary(Dom_model)
ci.l <- exp( Dom_m.sum$coeff[,1] - 1.96*(Dom_m.sum$coeff[,2]) )
ci.u <- exp( Dom_m.sum$coeff[,1] + 1.96*(Dom_m.sum$coeff[,2]) )
Dom_CI = rbind(ci.l, ci.u)
#95% CI for recessive OR
Rec_m.sum <- summary(Rec_model)
ci.l <- exp( Rec_m.sum$coeff[,1] - 1.96*(Rec_m.sum$coeff[,2]) )
ci.u <- exp( Rec_m.sum$coeff[,1] + 1.96*(Rec_m.sum$coeff[,2]) )
Rec_CI = rbind(ci.l, ci.u)
DomResults = paste("Dominant: OR:", toString(Dom_OR[2]), " Confidence Interval: (", toString(Dom_CI[1,2]), toString(Dom_CI[2,2]), ")")
RecResults = paste("Recesive: OR:", toString(Rec_OR[2]), " Confidence Interval: (", toString(Rec_CI[1,2]), toString(Rec_CI[2,2]), ")")
print(DomResults)
print(RecResults)
snp = s7694[s7694 != "00"]
CC_Log = cc[s7694 != "00"]==2
snp = s7694[s7694 != "00"]
CC_Log = cc[s7694 != "00"]==2
Dom <- c(1, 1, 0) #With A as the 'variant' allele
Rec <- c(1, 0, 0) #With A as the 'variant' allele
#Dominant model
contrasts(snp,1) <- cbind(Dom)
contrasts(snp)
Dom_model <- glm(CC_Log ~ snp, family=binomial)
#model4
Dom_OR = exp(Dom_model$coeff)
#Recessive model
contrasts(snp,1) <- cbind(Rec)
contrasts(snp)
Rec_model <- glm(CC_Log ~ snp, family=binomial)
#model5
Rec_OR = exp(Rec_model$coeff)
#95% CI for dominant OR
Dom_m.sum <- summary(Dom_model)
ci.l <- exp( Dom_m.sum$coeff[,1] - 1.96*(Dom_m.sum$coeff[,2]) )
ci.u <- exp( Dom_m.sum$coeff[,1] + 1.96*(Dom_m.sum$coeff[,2]) )
Dom_CI = rbind(ci.l, ci.u)
#95% CI for recessive OR
Rec_m.sum <- summary(Rec_model)
ci.l <- exp( Rec_m.sum$coeff[,1] - 1.96*(Rec_m.sum$coeff[,2]) )
ci.u <- exp( Rec_m.sum$coeff[,1] + 1.96*(Rec_m.sum$coeff[,2]) )
Rec_CI = rbind(ci.l, ci.u)
DomResults = paste("Dominant: OR:", toString(Dom_OR[2]), " Confidence Interval: (", toString(Dom_CI[1,2]), toString(Dom_CI[2,2]), ")")
RecResults = paste("Recesive: OR:", toString(Rec_OR[2]), " Confidence Interval: (", toString(Rec_CI[1,2]), toString(Rec_CI[2,2]), ")")
print(DomResults)
print(RecResults)
snp
summary(snp)
s7694
snp = s7094[s7064 != "00"]
CC_Log = cc[s7064 != "00"]==2
snp
snp = s7064[s7064 != "00"]
CC_Log = cc[s7064 != "00"]==2
snp
snp = s7064[s7064 != "00"]
CC_Log = cc[s7064 != "00"]==2
Dom <- c(1, 1, 0) #With A as the 'variant' allele
Rec <- c(1, 0, 0) #With A as the 'variant' allele
#Dominant model
contrasts(snp,1) <- cbind(Dom)
contrasts(snp)
Dom_model <- glm(CC_Log ~ snp, family=binomial)
#model4
Dom_OR = exp(Dom_model$coeff)
snp = s7064[s7064 != "00"]
CC_Log = cc[s7064 != "00"]==2
snp
contrasts(snp,1)
contrasts(snp,1)[-1,]
contrasts(snp)
contrasts(snp,1)[-1,] <- cbind(Dom)
contrasts(snp)[-1,]
Dom_model <- glm(CC_Log ~ snp, family=binomial)
#model4
Dom_OR = exp(Dom_model$coeff)
#95% CI for dominant OR
Dom_m.sum <- summary(Dom_model)
ci.l <- exp( Dom_m.sum$coeff[,1] - 1.96*(Dom_m.sum$coeff[,2]) )
ci.u <- exp( Dom_m.sum$coeff[,1] + 1.96*(Dom_m.sum$coeff[,2]) )
Dom_CI = rbind(ci.l, ci.u)
DomResults = paste("Dominant: OR:", toString(Dom_OR[2]), " Confidence Interval: (", toString(Dom_CI[1,2]), toString(Dom_CI[2,2]), ")")
print(DomResults)
1/.17
1/0.170385395537526
DomResults = paste("Dominant: OR:", toString(1/Dom_OR[2]), " Confidence Interval: (", toString(1/Dom_CI[1,2]), toString(1/Dom_CI[2,2]), ")")
DomResults = paste("Dominant: OR:", toString((1/Dom_OR[2])), " Confidence Interval: (", toString((1/Dom_CI[1,2])), toString((1/Dom_CI[2,2])), ")")
print(DomResults)
snp = factor(s7064[s7064 != "00"])
snp
summary(snp1)
snp = factor(s7064[s7064 != "00"])
CC_Log = cc[s7064 != "00"]==2
Dom <- c(1, 1, 0) #With A as the 'variant' allele
Rec <- c(1, 0, 0) #With A as the 'variant' allele
#Dominant model
contrasts(snp,1) <- cbind(Dom)
contrasts(snp)
Dom_model <- glm(CC_Log ~ snp, family=binomial)
#model4
Dom_OR = exp(Dom_model$coeff)
# snp = s7062
# CC_Log = cc==2
snp = factor(s7064[s7064 != "00"])
CC_Log = cc[s7064 != "00"]==2
Dom <- c(1, 1, 0) #With A as the 'variant' allele
Rec <- c(1, 0, 0) #With A as the 'variant' allele
#Dominant model
contrasts(snp,1) <- cbind(Dom)
contrasts(snp)
Dom_model <- glm(CC_Log ~ snp, family=binomial)
#model4
Dom_OR = exp(Dom_model$coeff)
#Recessive model
contrasts(snp,1) <- cbind(Rec)
contrasts(snp)
Rec_model <- glm(CC_Log ~ snp, family=binomial)
#model5
Rec_OR = exp(Rec_model$coeff)
#95% CI for dominant OR
Dom_m.sum <- summary(Dom_model)
ci.l <- exp( Dom_m.sum$coeff[,1] - 1.96*(Dom_m.sum$coeff[,2]) )
ci.u <- exp( Dom_m.sum$coeff[,1] + 1.96*(Dom_m.sum$coeff[,2]) )
Dom_CI = rbind(ci.l, ci.u)
#95% CI for recessive OR
Rec_m.sum <- summary(Rec_model)
ci.l <- exp( Rec_m.sum$coeff[,1] - 1.96*(Rec_m.sum$coeff[,2]) )
ci.u <- exp( Rec_m.sum$coeff[,1] + 1.96*(Rec_m.sum$coeff[,2]) )
Rec_CI = rbind(ci.l, ci.u)
DomResults = paste("Dominant: OR:", toString(Dom_OR[2]), " Confidence Interval: (", toString(Dom_CI[1,2]), toString(Dom_CI[2,2]), ")")
RecResults = paste("Recesive: OR:", toString(Rec_OR[2]), " Confidence Interval: (", toString(Rec_CI[1,2]), toString(Rec_CI[2,2]), ")")
print(DomResults)
print(RecResults)
#--------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------
#VARIABLES
#
#Gender: this is sex, NOT GENDER
#Age
#Race
#NDRM.CH: % change in muscle mass before & after exercise training (Non-Dominant Arm)
#DRM.CH:  % change in muscle mass before & after exercise training (Dominant Arm)
#Pre.weight
#Pre.height
#pre.BMI
#SBP:     Systolic Blood Pressure
#Dom.Arm: Dominant Arm
#Post.weight
#Post.Height
#Calc.post.BMI
#
#SNPs in lots of different genes
#--------------------------------------------------------------------------------------
# Your assignment is to do an exploratory analysis of genetic and/or other factors
# that are predictive of % change in muscle mass before & after exercise training
# in the non-dominant arm (NDRM.CH).
#--------------------------------------------------------------------------------------
#READ IN THE FULL FAMUSS DATASET
setwd("/Users/Nick/fall14/statGen/finalProject")
library(vioplot)
library(haplo.stats)
library(ggplot2)
library(plyr)
source("http://www.uvm.edu/~rsingle/Rdata/scripts_stat295F14.R")
fms <- otherdata("FMS_data.tsv", sep="\t")
attach(fms)
#--------------------------------------------------------------------------------------
#We assign out cutoff at the 90th percentile
cutoff = quantile(NDRM.CH, c(.95), na.rm = TRUE)
#testing with a random snp first.
chisq.test(table(NDRM.CH > cutoff, actn3_1671064))
#Take out the b2b col
fms2 = fms[,colnames(fms) != "b2b"]
#get the names of the snps
snps = names(fms2)[5:226]
percents_NA = NULL
for (snp in snps){
percents_NA = c(percents_NA, ( summary(fms[[snp]])["NA's"] / length(fms[[snp]])) )
}
#hist(percent_NA, breaks = 20)
vioplot(percents_NA)
#So we will throw away snps with NA percentange of higher than 70.
#Initialize some lists
NDRM_pvals    = NULL
NDRM_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(NDRM.CH > 100, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
NDRM_pvals = c(NDRM_pvals, pval)
NDRM_usedSnps = c(NDRM_usedSnps, snp)
}
}
bonferPVal = .05/length(NDRM_pvals)
bonferPVal
barplot(-log10(NDRM_pvals))
#make a csv for exporting
NDRM_Out = data.frame(NDRM_usedSnps, -log10(NDRM_pvals))
write.csv(NDRM_Out, file = "NDRM_Data.csv")
#To the manhattans!
pdf("manhattan.pdf")
barplot(-log10(pvals))
dev.off()
#Here is a new comment.
#Find the pvalue for significance with conservative bonferoni correction.
bonferPVal = .05/length(snps)
#-----------------------------------------------------------------------------------------------------
# Looping through to test HWE chisq on everysnp
#----------------------------------------------------------------------------------------------------
HWE_pvals = NULL
HWE_usedSnps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped    = genotype(currentSnp, sep = "")
HWE_pval     = HWE.chisq(genotyped)$p.value
HWE_pvals    = c(HWE_pvals, HWE_pval)
HWE_usedSnps = c(HWE_usedSnps, snp)
if (-log10(HWE_pval) > 3.5 ){
Color = c(Color, "red")
} else {
Color = c(Color, "blue")
}
#     if ( (-log10(HWE_pval) < 4.5) && (-log10(HWE_pval) > 3.8)){
#       print(paste(snp,HWE_pval))
#       print(summary(currentSnp))
#     }
}
}
results = data.frame(HWE_usedSnps, -log10(HWE_pvals), Color)
#Let's plot with ggplot because we can, and it's pretty.
ggplot(data=results, aes(x=HWE_usedSnps, y=X.log10.HWE_pvals.)) +
geom_bar(aes(fill=X.log10.HWE_pvals.>3),stat="identity") +
theme(axis.text.x = element_blank()) +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)") + xlab("SNP")
#make a csv for exporting
HWE_Out = data.frame(HWE_usedSnps, -log10(HWE_pvals))
write.csv(HWE_Out, file = "HWE_Data.csv")
Merged_Out = cbind(HWE_usedSnps, HWE_pvals, NDRM_usedSnps, NDRM_pvals)
testing = rbind.fill(HWE_Out, NDRM_Out)
HWE_pvals = NULL
HWE_usedSnps = NULL
Color = NULL
for (snp in snps){
currentSnp = fms2[[snp]]
if (length(unique(currentSnp)) > 2){
genotyped    = genotype(currentSnp, sep = "")
HWE_pval     = HWE.chisq(genotyped)$p.value
HWE_pvals    = c(HWE_pvals, HWE_pval)
HWE_usedSnps = c(HWE_usedSnps, snp)
#     if (-log10(HWE_pval) > 3.5 ){ #For plotting lt=
#       Color = c(Color, "red")
#     } else {
#       Color = c(Color, "blue")
#     }
#     if ( (-log10(HWE_pval) < 4.5) && (-log10(HWE_pval) > 3.8)){
#       print(paste(snp,HWE_pval))
#       print(summary(currentSnp))
#     }
}
}
results = data.frame(HWE_usedSnps, -log10(HWE_pvals))
Let's plot with ggplot because we can, and it's pretty.
ggplot(data=results, aes(x=HWE_usedSnps, y=X.log10.HWE_pvals.)) +
geom_bar(aes(fill=X.log10.HWE_pvals.>3),stat="identity") +
theme(axis.text.x = element_blank()) +
ggtitle("Hardy Weinberg Equilibrium chi-squared for SNPs") +
ylab("-Log10(P-Value)") + xlab("SNP")
DRM_pvals    = NULL
DRM_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(DRM.CH > 100, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
DRM_pvals = c(DRM_pvals, pval)
DRM_usedSnps = c(DRM_usedSnps, snp)
}
}
barplot(-log10(NDRM_pvals))
#make a csv for exporting
DRM_Out = data.frame(DRM_usedSnps, -log10(DRM_pvals))
write.csv(DRM_Out, file = "DRM_Data.csv")
barplot(-log10(DRM_pvals))
cutoff = quantile(DRM.CH, c(.95), na.rm = TRUE)
cutoff
DRM_cutoff = quantile(DRM.CH, c(.95), na.rm = TRUE)
DRM_pvals    = NULL
DRM_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(DRM.CH > DRM_cutoff, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
DRM_pvals = c(DRM_pvals, pval)
DRM_usedSnps = c(DRM_usedSnps, snp)
}
}
barplot(-log10(DRM_pvals))
DRM_Out = data.frame(DRM_usedSnps, -log10(DRM_pvals))
write.csv(DRM_Out, file = "DRM_Data.csv")
DRM_cutoff = quantile(DRM.CH, c(.95), na.rm = TRUE)
DRM_pvals    = NULL
DRM_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(DRM.CH > DRM_cutoff, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
DRM_pvals = c(DRM_pvals, pval)
DRM_usedSnps = c(DRM_usedSnps, snp)
}
}
barplot(-log10(DRM_pvals))
DRM_cutoff = quantile(DRM.CH, c(.90), na.rm = TRUE)
DRM_pvals    = NULL
DRM_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(DRM.CH > DRM_cutoff, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
DRM_pvals = c(DRM_pvals, pval)
DRM_usedSnps = c(DRM_usedSnps, snp)
}
}
barplot(-log10(DRM_pvals))
#make a csv for exporting
DRM_Out = data.frame(DRM_usedSnps, -log10(DRM_pvals))
write.csv(DRM_Out, file = "d3Viz/DRM_Data.csv")
SBP_cutoff = quantile(SBP.CH, c(.90), na.rm = TRUE)
SBP_pvals    = NULL
SBP_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(SBP.CH > SBP_cutoff, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
SBP_pvals = c(SBP_pvals, pval)
SBP_usedSnps = c(SBP_usedSnps, snp)
}
}
barplot(-log10(SBP_pvals))
SBP_cutoff = quantile(SBP.CH, c(.90), na.rm = TRUE)
SBP_pvals    = NULL
SBP_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(SBP > SBP_cutoff, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
SBP_pvals = c(SBP_pvals, pval)
SBP_usedSnps = c(SBP_usedSnps, snp)
}
}
barplot(-log10(SBP_pvals))
SBP_cutoff = quantile(SBP, c(.90), na.rm = TRUE)
SBP_pvals    = NULL
SBP_usedSnps = NULL
for (snp in snps){
percent_NA = summary(fms2[[snp]])["NA's"] / length(fms2[[snp]])
tabledVals = table(SBP > SBP_cutoff, fms2[[snp]])
if ((percent_NA < .7) && !(0 %in% tabledVals)){
pval = chisq.test(tabledVals)$p.value
SBP_pvals = c(SBP_pvals, pval)
SBP_usedSnps = c(SBP_usedSnps, snp)
}
}
barplot(-log10(SBP_pvals))
barplot(-log10(DRM_pvals))
SBP_Out = data.frame(SBP_usedSnps, -log10(SBP_pvals))
write.csv(SBP_Out, file = "d3Viz/SBP_Data.csv")
#run HWE chi-square
table(nos3_rs1799983)
snp1 <- genotype(nos3_rs1799983, sep="")
summary(snp1)
HWE.chisq(snp1)
tabledVals = table(fms2$nos3_rs1799983,NDRM.CH > 100 )
chisq.test(tabledVals)
x <- tabledVals
or.GG.TT <- (x[1,1]*x[3,2])/(x[1,2]*x[3,1])
or.GT.TT <- (x[2,1]*x[3,2])/(x[2,2]*x[3,1])
or.AA.GG  # 3.95 more likely to have muscle bellow 90th percentile if GG
or.GA.GG  # 1.99 times more likely to have muscle below 90th percentile if GT
#run HWE chi-square
table(nos3_rs1799983)
snp1 <- genotype(nos3_rs1799983, sep="")
summary(snp1)
HWE.chisq(snp1)
tabledVals = table(fms2$nos3_rs1799983,NDRM.CH > 100 )
chisq.test(tabledVals)
x <- tabledVals
or.GG.TT <- (x[1,1]*x[3,2])/(x[1,2]*x[3,1])
or.GT.TT <- (x[2,1]*x[3,2])/(x[2,2]*x[3,1])
or.GG.TT  # 3.95 more likely to have muscle bellow 90th percentile if GG
or.GT.TT  # 1.99 times more likely to have muscle below 90th percentile if GT
